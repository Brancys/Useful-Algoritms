//O(n) time and space
class Solution {
    public void reorderList(ListNode head) {
        //Sanity Check
        if(head==null || head.next==null) return;
        ListNode prev =null,slow=head,fast=head;
        while(fast!=null && fast.next!=null){
            prev = slow;
            slow = slow.next;
            fast = fast.next.next;
        }
        prev.next = null;
        ListNode l1 = head;
        ListNode l2 = reverse(slow);
        merge(l1,l2);
    }
    public void merge(ListNode l1, ListNode l2){
        while(l1!=null && l2!=null){
            ListNode next1 = l1.next;
            ListNode next2 = l2.next;
            l1.next = l2;
            if(next1==null){
                break;
            }
            l2.next = next1;
            l1 = next1;
            l2 = next2;
        }
    }
     public ListNode reverse(ListNode head){
        ListNode curr= head;
        ListNode prev = null;
        while(curr!=null){
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
