package DynamicProgramming;
import java.util.*;
//Given two strings s and t, find how many times t occurs in s
//t can occur as a subsequence of s and not necessarily in contiguous order
public class subsequencecount {
    private int subsequence(String s, String t){
        int m = s.length();
        int n = t.length();
        int[][] dp = new int[m+1][n+1];
        //If the first string is empty, then zero
        for(int i=0;i<=n;i++) dp[0][i] = 0;
        //If the second string is empty, then one
        for(int i=0;i<=m;i++) dp[i][0] = 1;
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(s.charAt(i-1)==t.charAt(j-1))
                dp[i][j] = dp[i-1][j] + dp[i-1][j-1];
                else
                    dp[i][j] = dp[i-1][j];
            }
        }
        return dp[m][n];
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        subsequencecount s = new subsequencecount();
        System.out.println("Please enter the first and second strings");
        String S = in.nextLine();
        String T = in.nextLine();
        System.out.println("No of times t occurs in s is "+s.subsequence(S,T));
    }
}
